plugins {
    id('java')
}

group 'org.starmc'
version '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    // mavenLocal() // This is needed for CraftBukkit and Spigot.
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven {
        url 'https://repo.destroystokyo.com/repository/maven-public/'
    }
}

dependencies {

    compileOnly(rootProject)

    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"

    // Libs
    implementation "org.javatuples:javatuples:1.2"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains:annotations:23.0.0'

    // Other
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

compileJava {
    sourceCompatibility = '20'
    targetCompatibility = '20'
}

def targetJavaVersion = 20
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "org.starmc.EntityActivator"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    destinationDirectory.set(file("$rootProject.projectDir/jars"))
}